<?xml version='1.0'?>
<ns2:test-suite xmlns:ns2='urn:model.allure.qatools.yandex.ru' start='1652018484887' stop='1652018501830'>
    <name>Task 2 scenario</name>
    <title>Task 2 scenario</title>
    <test-cases>
        <test-case start='1652018484889' status='failed' stop='1652018501823'>
            <name>Task 2 automation</name>
            <title>Task 2 automation</title>
            <labels>
                <label name='language' value='javascript'/>
                <label name='framework' value='wdio'/>
                <label name='thread' value='0-0'/>
            </labels>
            <parameters>
                <parameter kind='argument' name='browser' value='chrome-101.0.4951.41'/>
            </parameters>
            <steps>
                <step start='1652018484890' status='passed' stop='1652018484890'>
                    <name>Starting execution for finding carrer categories titles</name>
                    <title>Starting execution for finding carrer categories titles</title>
                    <attachments/>
                    <steps/>
                </step>
                <step start='1652018484890' status='passed' stop='1652018484890'>
                    <name>Navigating to: function (...args) {
                            /**
                             * use sync mode if:
                             * - @wdio/sync package is installed and can be resolved
                             * - if a global.browser is define so we run with wdio testrunner
                             * - we are in a fiber context (flag is set when outer function is wrapped into fibers context)
                             *
                             * also if we run command asynchronous and the command suppose to return an element, we
                             * apply `chainElementQuery` to allow chaining of these promises.
                             */
                            const command = hasWdioSyncSupport &amp;&amp; wdioSync &amp;&amp; Boolean(global.browser) &amp;&amp; !exports.runAsync &amp;&amp; !exports.asyncSpec
                                ? wdioSync.wrapCommand(commandName, fn)
                                : ELEMENT_QUERY_COMMANDS.includes(commandName) || commandName.endsWith('$')
                                    ? chainElementQuery
                                    : wrapCommandFn;
                            return command.apply(this, args);
                        }/</name>
                    <title>Navigating to: function (...args) {
                            /**
                             * use sync mode if:
                             * - @wdio/sync package is installed and can be resolved
                             * - if a global.browser is define so we run with wdio testrunner
                             * - we are in a fiber context (flag is set when outer function is wrapped into fibers context)
                             *
                             * also if we run command asynchronous and the command suppose to return an element, we
                             * apply `chainElementQuery` to allow chaining of these promises.
                             */
                            const command = hasWdioSyncSupport &amp;&amp; wdioSync &amp;&amp; Boolean(global.browser) &amp;&amp; !exports.runAsync &amp;&amp; !exports.asyncSpec
                                ? wdioSync.wrapCommand(commandName, fn)
                                : ELEMENT_QUERY_COMMANDS.includes(commandName) || commandName.endsWith('$')
                                    ? chainElementQuery
                                    : wrapCommandFn;
                            return command.apply(this, args);
                        }/</title>
                    <attachments/>
                    <steps/>
                </step>
            </steps>
            <attachments>
                <attachment title='Screenshot' source='6ad47391-884c-48f8-af32-73683cf87b53-attachment.png' type='image/png' size='92275'/>
            </attachments>
            <failure>
                <message>Error: element ("*=Career") still not displayed after 10000ms</message>
                <stack-trace>Error: element ("*=Career") still not displayed after 10000ms
                    at async HelperBrowser.findElement (/Users/ugniusnorkevicius/Desktop/nordAutomation/nordAutomation/task2/utilities/HelperBrowser.ts:3:9)
                    at async HelperBrowser.click (/Users/ugniusnorkevicius/Desktop/nordAutomation/nordAutomation/task2/utilities/HelperBrowser.ts:13:22)
                    at async UserContext.&lt;anonymous> (/Users/ugniusnorkevicius/Desktop/nordAutomation/nordAutomation/task2/scenarios/task2.ts:10:9)</stack-trace>
            </failure>
        </test-case>
    </test-cases>
</ns2:test-suite>